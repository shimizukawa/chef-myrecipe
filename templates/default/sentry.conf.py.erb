
import os.path

CONF_ROOT = os.path.dirname(__file__)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '<%= @db_name %>',
        'USER': '<%= @db_user %>',
        'PASSWORD': '<%= @db_passwd %>',
        'HOST': '<%= @db_host %>',
        'PORT': '<%= @db_port %>',
    }
}


# If you're expecting any kind of real traffic on Sentry, we highly recommend
# configuring the CACHES and Redis settings

###########
## CACHE ##
###########

<%- if @memcache -%>
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': [<%= @memcache.locations.map{|l| "'#{l}'"}.join(', ') %>],
    }
}
<%- end -%>

###########
## Queue ##
###########

# See http://sentry.readthedocs.org/en/latest/queue/index.html for more
# information on configuring your queue broker and workers.

# You can enable queueing of jobs by turning off the always eager setting:
<%- if @queue -%>
CELERY_ALWAYS_EAGER = False
BROKER_CONNECTION_RETRY = True
BROKER_URL = '<%= @queue.broker %>'
<%- else -%>
# CELERY_ALWAYS_EAGER = False
# BROKER_URL = 'redis://localhost:6379'
<%- end -%>

####################
## Update Buffers ##
####################

# Buffers (combined with queueing) act as an intermediate layer between the
# database and the storage API. They will greatly improve efficiency on large
# numbers of the same events being sent to the API in a short amount of time.

<%- if @buffer -%>
SENTRY_BUFFER = '<%= @buffer.backend %>'
SENTRY_BUFFER_OPTIONS = <%= @buffer.options %>
<%- else -%>
# You'll need to install the required dependencies for Redis buffers:
#   pip install redis hiredis nydus
#
# SENTRY_BUFFER = 'sentry.buffer.redis.RedisBuffer'
# SENTRY_BUFFER_OPTIONS = {
#     'hosts': {
#         0: {
#             'host': '127.0.0.1',
#             'port': 6379,
#         }
#     }
# }
<%- end -%>

################
## Web Server ##
################

# You MUST configure the absolute URI root for Sentry:
SENTRY_URL_PREFIX = '<%= @url_prefix %>'  # No trailing slash!
<%- if @url_subpath -%>
FORCE_SCRIPT_NAME = '<%= @url_subpath %>'
STATIC_URL = '<%= @url_subpath %>/_static/'
<%- end -%>

# If you're using a reverse proxy, you should enable the X-Forwarded-Proto
# header, and uncomment the following setting
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

SENTRY_WEB_HOST = '<%= @bind_host %>'
SENTRY_WEB_PORT = <%= @bind_port %>
SENTRY_WEB_OPTIONS = {
    'workers': <%= @workers %>,  # the number of gunicorn workers
    'secure_scheme_headers': {'X-FORWARDED-PROTO': '<%= @proxy_proto %>'},
}
#ALLOWED_HOSTS = ['127.0.0.1']
ALLOWED_HOSTS = ['*']

#################
## Mail Server ##
#################

# For more information check Django's documentation:
#  https://docs.djangoproject.com/en/1.3/topics/email/?from=olddocs#e-mail-backends

EMAIL_BACKEND = '<%= @email.backend %>'

EMAIL_HOST = '<%= @email.host %>'
EMAIL_HOST_PASSWORD = '<%= @email.host_password %>'
EMAIL_HOST_USER = '<%= @email.host_user %>'
EMAIL_PORT = <%= @email.port %>
EMAIL_USE_TLS = <%= @email.use_tls ? 'True' : 'False' %>

<%- if @email.address -%>
# The email address to send on behalf of
SERVER_EMAIL = '<%= @email.address %>'
<%- end -%>

<%- if @use_udp -%>
#########
## udp ##
#########

SENTRY_UDP_HOST = '<%= @udp_host %>'
SENTRY_UDP_PORT = <%= @udp_port %>

<%- end -%>

###########
## etc. ##
###########

SECRET_KEY = '7dof8o5+MdBxPUS5Ak/X2A6Flz5rRrW1i+VwPKAPXWxHmdMNJWLzNw=='

# http://twitter.com/apps/new
# It's important that input a callback URL, even if its useless. We have no idea why, consult Twitter.
TWITTER_CONSUMER_KEY = ''
TWITTER_CONSUMER_SECRET = ''

# http://developers.facebook.com/setup/
FACEBOOK_APP_ID = ''
FACEBOOK_API_SECRET = ''

# http://code.google.com/apis/accounts/docs/OAuth2.html#Registering
GOOGLE_OAUTH2_CLIENT_ID = ''
GOOGLE_OAUTH2_CLIENT_SECRET = ''

# https://github.com/settings/applications/new
GITHUB_APP_ID = ''
GITHUB_API_SECRET = ''

# https://trello.com/1/appKey/generate
TRELLO_API_KEY = ''
TRELLO_API_SECRET = ''

# https://confluence.atlassian.com/display/BITBUCKET/OAuth+Consumers
BITBUCKET_CONSUMER_KEY = ''
BITBUCKET_CONSUMER_SECRET = ''


##############
# custom

SENTRY_ALLOW_REGISTRATION = <%= @allow_registration ? 'True': 'False' %>

